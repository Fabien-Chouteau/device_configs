with "config/stm32g0_71_81_dc_config.gpr";
abstract project stm32g0_71_81_dc is
   for Target use "arm-elf";
   for Runtime ("Ada") use "light-cortex-m0p";
   package Device_Configuration is
      Device_Name := stm32g0_71_81_dc_Config.Device;
      for CPU_Name use "cortex-m0+";

      for Interrupt ("0") use "WWDG";
      for Interrupt ("1") use "PVD";
      for Interrupt ("2") use "RTC_TAMP";
      for Interrupt ("3") use "FLASH";
      for Interrupt ("4") use "RCC";
      for Interrupt ("5") use "EXTI0_1";
      for Interrupt ("6") use "EXTI2_3";
      for Interrupt ("7") use "EXTI4_15";
      for Interrupt ("8") use "UCPD1_2";
      for Interrupt ("9") use "DMA1_Channel1";
      for Interrupt ("10") use "DMA1_Channel2_3";
      for Interrupt ("11") use "DMA1_Ch4_7_DMAMUX1_OVR";
      for Interrupt ("12") use "ADC1_COMP";
      for Interrupt ("13") use "TIM1_BRK_UP_TRG_COM";
      for Interrupt ("14") use "TIM1_CC";
      for Interrupt ("15") use "TIM2";
      for Interrupt ("16") use "TIM3";
      for Interrupt ("17") use "TIM6_DAC_LPTIM1";
      for Interrupt ("18") use "TIM7_LPTIM2";
      for Interrupt ("19") use "TIM14";
      for Interrupt ("20") use "TIM15";
      for Interrupt ("21") use "TIM16";
      for Interrupt ("22") use "TIM17";
      for Interrupt ("23") use "I2C1";
      for Interrupt ("24") use "I2C2";
      for Interrupt ("25") use "SPI1";
      for Interrupt ("26") use "SPI2";
      for Interrupt ("27") use "USART1";
      for Interrupt ("28") use "USART2";
      for Interrupt ("29") use "USART3_4_LPUART1";
      for Interrupt ("30") use "CEC";
      case Device_Name is
         when "" =>
            for Interrupt ("31") use "AES_RNG";
         when others => null;
      end case;

      Mem_List := ();
      Mem_List := Mem_List & ("sram1");
      for Mem_Kind ("sram1") use "RAM";
      for Address  ("sram1") use "0x20000000";
      for Size     ("sram1") use "36864";
      case Device_Name is
         when "stm32g071c6t6" |
              "stm32g071c6u3" |
              "stm32g071c6u6" |
              "stm32g071c6u7" |
              "stm32g071g6u3" |
              "stm32g071g6u6" |
              "stm32g071g6u7" |
              "stm32g071k6t6" |
              "stm32g071k6u3" |
              "stm32g071k6u6" |
              "stm32g071k6u7" |
              "stm32g071r6t6" =>
            Mem_List := Mem_List & ("flash");
            for Mem_Kind ("flash") use "ROM";
            for Address  ("flash") use "0x8000000";
            for Size     ("flash") use "32768";
         when others => null;
      end case;
      case Device_Name is
         when "stm32g071c8t3" |
              "stm32g071c8t6" |
              "stm32g071c8t7" |
              "stm32g071c8u3" |
              "stm32g071c8u6" |
              "stm32g071c8u7" |
              "stm32g071g8u6" |
              "stm32g071g8u6n" |
              "stm32g071k8t3" |
              "stm32g071k8t3n" |
              "stm32g071k8t6" |
              "stm32g071k8t6n" |
              "stm32g071k8t7" |
              "stm32g071k8t7n" |
              "stm32g071k8u3" |
              "stm32g071k8u3n" |
              "stm32g071k8u6" |
              "stm32g071k8u6n" |
              "stm32g071k8u7" |
              "stm32g071k8u7n" |
              "stm32g071r8t6" =>
            Mem_List := Mem_List & ("flash");
            for Mem_Kind ("flash") use "ROM";
            for Address  ("flash") use "0x8000000";
            for Size     ("flash") use "65536";
         when others => null;
      end case;
      case Device_Name is
         when "stm32g071cbt3" |
              "stm32g071cbt6" |
              "stm32g071cbt7" |
              "stm32g071cbu3" |
              "stm32g071cbu6" |
              "stm32g071cbu7" |
              "stm32g071eby6" |
              "stm32g071gbu3" |
              "stm32g071gbu3n" |
              "stm32g071gbu6" |
              "stm32g071gbu6n" |
              "stm32g071gbu7" |
              "stm32g071gbu7n" |
              "stm32g071kbt3" |
              "stm32g071kbt3n" |
              "stm32g071kbt6" |
              "stm32g071kbt6n" |
              "stm32g071kbt7" |
              "stm32g071kbt7n" |
              "stm32g071kbu3" |
              "stm32g071kbu3n" |
              "stm32g071kbu6" |
              "stm32g071kbu6n" |
              "stm32g071kbu7" |
              "stm32g071kbu7n" |
              "stm32g071rbi3" |
              "stm32g071rbi6" |
              "stm32g071rbi7" |
              "stm32g071rbt3" |
              "stm32g071rbt6" |
              "stm32g071rbt7" |
              "stm32g081cbt6" |
              "stm32g081cbu6" |
              "stm32g081eby6" |
              "stm32g081gbu6" |
              "stm32g081gbu6n" |
              "stm32g081kbt6" |
              "stm32g081kbt6n" |
              "stm32g081kbu6" |
              "stm32g081kbu6n" |
              "stm32g081rbi3" |
              "stm32g081rbi6" |
              "stm32g081rbi7" |
              "stm32g081rbt3" |
              "stm32g081rbt6" |
              "stm32g081rbt7" =>
            Mem_List := Mem_List & ("flash");
            for Mem_Kind ("flash") use "ROM";
            for Address  ("flash") use "0x8000000";
            for Size     ("flash") use "131072";
         when others => null;
      end case;
      for Memories use Mem_List;
      for Boot_Memory use stm32g0_71_81_dc_Config.Boot_Memory;
      for Main_Stack_Size use stm32g0_71_81_dc_Config.Stack_Size;

   end Device_Configuration;
end stm32g0_71_81_dc;
