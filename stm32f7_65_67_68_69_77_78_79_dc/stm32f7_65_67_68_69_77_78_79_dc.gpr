with "config/stm32f7_65_67_68_69_77_78_79_dc_config.gpr";
abstract project stm32f7_65_67_68_69_77_78_79_dc is
   for Target use "arm-elf";
   for Runtime ("Ada") use "light-cortex-m7df";
   package Device_Configuration is
      Device_Name := stm32f7_65_67_68_69_77_78_79_dc_Config.Device;
      for CPU_Name use "cortex-m7fd";

      for Interrupt ("0") use "WWDG";
      for Interrupt ("1") use "PVD";
      for Interrupt ("2") use "TAMP_STAMP";
      for Interrupt ("3") use "RTC_WKUP";
      for Interrupt ("4") use "FLASH";
      for Interrupt ("5") use "RCC";
      for Interrupt ("6") use "EXTI0";
      for Interrupt ("7") use "EXTI1";
      for Interrupt ("8") use "EXTI2";
      for Interrupt ("9") use "EXTI3";
      for Interrupt ("10") use "EXTI4";
      for Interrupt ("11") use "DMA1_Stream0";
      for Interrupt ("12") use "DMA1_Stream1";
      for Interrupt ("13") use "DMA1_Stream2";
      for Interrupt ("14") use "DMA1_Stream3";
      for Interrupt ("15") use "DMA1_Stream4";
      for Interrupt ("16") use "DMA1_Stream5";
      for Interrupt ("17") use "DMA1_Stream6";
      for Interrupt ("18") use "ADC";
      for Interrupt ("19") use "CAN1_TX";
      for Interrupt ("20") use "CAN1_RX0";
      for Interrupt ("21") use "CAN1_RX1";
      for Interrupt ("22") use "CAN1_SCE";
      for Interrupt ("23") use "EXTI9_5";
      for Interrupt ("24") use "TIM1_BRK_TIM9";
      for Interrupt ("25") use "TIM1_UP_TIM10";
      for Interrupt ("26") use "TIM1_TRG_COM_TIM11";
      for Interrupt ("27") use "TIM1_CC";
      for Interrupt ("28") use "TIM2";
      for Interrupt ("29") use "TIM3";
      for Interrupt ("30") use "TIM4";
      for Interrupt ("31") use "I2C1_EV";
      for Interrupt ("32") use "I2C1_ER";
      for Interrupt ("33") use "I2C2_EV";
      for Interrupt ("34") use "I2C2_ER";
      for Interrupt ("35") use "SPI1";
      for Interrupt ("36") use "SPI2";
      for Interrupt ("37") use "USART1";
      for Interrupt ("38") use "USART2";
      for Interrupt ("39") use "USART3";
      for Interrupt ("40") use "EXTI15_10";
      for Interrupt ("41") use "RTC_Alarm";
      for Interrupt ("42") use "OTG_FS_WKUP";
      for Interrupt ("43") use "TIM8_BRK_TIM12";
      for Interrupt ("44") use "TIM8_UP_TIM13";
      for Interrupt ("45") use "TIM8_TRG_COM_TIM14";
      for Interrupt ("46") use "TIM8_CC";
      for Interrupt ("47") use "DMA1_Stream7";
      for Interrupt ("48") use "FMC";
      for Interrupt ("49") use "SDMMC1";
      for Interrupt ("50") use "TIM5";
      for Interrupt ("51") use "SPI3";
      for Interrupt ("52") use "UART4";
      for Interrupt ("53") use "UART5";
      for Interrupt ("54") use "TIM6_DAC";
      for Interrupt ("55") use "TIM7";
      for Interrupt ("56") use "DMA2_Stream0";
      for Interrupt ("57") use "DMA2_Stream1";
      for Interrupt ("58") use "DMA2_Stream2";
      for Interrupt ("59") use "DMA2_Stream3";
      for Interrupt ("60") use "DMA2_Stream4";
      for Interrupt ("61") use "ETH";
      for Interrupt ("62") use "ETH_WKUP";
      for Interrupt ("63") use "CAN2_TX";
      for Interrupt ("64") use "CAN2_RX0";
      for Interrupt ("65") use "CAN2_RX1";
      for Interrupt ("66") use "CAN2_SCE";
      for Interrupt ("67") use "OTG_FS";
      for Interrupt ("68") use "DMA2_Stream5";
      for Interrupt ("69") use "DMA2_Stream6";
      for Interrupt ("70") use "DMA2_Stream7";
      for Interrupt ("71") use "USART6";
      for Interrupt ("72") use "I2C3_EV";
      for Interrupt ("73") use "I2C3_ER";
      for Interrupt ("74") use "OTG_HS_EP1_OUT";
      for Interrupt ("75") use "OTG_HS_EP1_IN";
      for Interrupt ("76") use "OTG_HS_WKUP";
      for Interrupt ("77") use "OTG_HS";
      for Interrupt ("78") use "DCMI";
      for Interrupt ("81") use "FPU";
      for Interrupt ("82") use "UART7";
      for Interrupt ("83") use "UART8";
      for Interrupt ("84") use "SPI4";
      for Interrupt ("85") use "SPI5";
      for Interrupt ("86") use "SPI6";
      for Interrupt ("87") use "SAI1";
      for Interrupt ("90") use "DMA2D";
      for Interrupt ("91") use "SAI2";
      for Interrupt ("92") use "QUADSPI";
      for Interrupt ("93") use "LPTIM1";
      for Interrupt ("94") use "CEC";
      for Interrupt ("95") use "I2C4_EV";
      for Interrupt ("96") use "I2C4_ER";
      for Interrupt ("97") use "SPDIF_RX";
      for Interrupt ("99") use "DFSDM1_FLT0";
      for Interrupt ("100") use "DFSDM1_FLT1";
      for Interrupt ("101") use "DFSDM1_FLT2";
      for Interrupt ("102") use "DFSDM1_FLT3";
      for Interrupt ("103") use "SDMMC2";
      for Interrupt ("104") use "CAN3_TX";
      for Interrupt ("105") use "CAN3_RX0";
      for Interrupt ("106") use "CAN3_RX1";
      for Interrupt ("107") use "CAN3_SCE";
      for Interrupt ("109") use "MDIOS";
      case Device_Name is
         when "" =>
            for Interrupt ("79") use "CRYP";
         when others => null;
      end case;
      case Device_Name is
         when "" =>
            for Interrupt ("80") use "HASH_RNG";
         when others => null;
      end case;
      case Device_Name is
         when "" =>
            for Interrupt ("80") use "RNG";
         when others => null;
      end case;
      case Device_Name is
         when "" =>
            for Interrupt ("88") use "LTDC";
         when others => null;
      end case;
      case Device_Name is
         when "" =>
            for Interrupt ("89") use "LTDC_ER";
         when others => null;
      end case;
      case Device_Name is
         when "" =>
            for Interrupt ("98") use "DSI";
         when others => null;
      end case;
      case Device_Name is
         when "" =>
            for Interrupt ("108") use "JPEG";
         when others => null;
      end case;

      Mem_List := ();
      Mem_List := Mem_List & ("itcm");
      for Mem_Kind ("itcm") use "RAM";
      for Address  ("itcm") use "0x00";
      for Size     ("itcm") use "16384";
      Mem_List := Mem_List & ("dtcm");
      for Mem_Kind ("dtcm") use "RAM";
      for Address  ("dtcm") use "0x20000000";
      for Size     ("dtcm") use "131072";
      Mem_List := Mem_List & ("sram1");
      for Mem_Kind ("sram1") use "RAM";
      for Address  ("sram1") use "0x20020000";
      for Size     ("sram1") use "376832";
      Mem_List := Mem_List & ("sram2");
      for Mem_Kind ("sram2") use "RAM";
      for Address  ("sram2") use "0x2007C000";
      for Size     ("sram2") use "16384";
      Mem_List := Mem_List & ("backup");
      for Mem_Kind ("backup") use "RAM";
      for Address  ("backup") use "0x40024000";
      for Size     ("backup") use "4096";
      case Device_Name is
         when "stm32f765bgt6" |
              "stm32f765igk6" |
              "stm32f765igt6" |
              "stm32f765ngh6" |
              "stm32f765ngh7" |
              "stm32f765vgh6" |
              "stm32f765vgh7" |
              "stm32f765vgt6" |
              "stm32f765vgt7" |
              "stm32f765zgt6" |
              "stm32f765zgt7" |
              "stm32f767bgt6" |
              "stm32f767igk6" |
              "stm32f767igt6" |
              "stm32f767ngh6" |
              "stm32f767vgh6" |
              "stm32f767vgh7" |
              "stm32f767vgt6" |
              "stm32f767vgt7" |
              "stm32f767zgt6" |
              "stm32f769agy6" |
              "stm32f769bgt6" |
              "stm32f769igt6" |
              "stm32f769ngh6" =>
            Mem_List := Mem_List & ("flash");
            for Mem_Kind ("flash") use "ROM";
            for Address  ("flash") use "0x200000";
            for Size     ("flash") use "1048576";
         when others => null;
      end case;
      case Device_Name is
         when "stm32f765bit6" |
              "stm32f765iik6" |
              "stm32f765iik7" |
              "stm32f765iit6" |
              "stm32f765iit7" |
              "stm32f765nih6" |
              "stm32f765nih7" |
              "stm32f765vih6" |
              "stm32f765vit6" |
              "stm32f765zit6" |
              "stm32f765zit7" |
              "stm32f767bit6" |
              "stm32f767iik6" |
              "stm32f767iit6" |
              "stm32f767nih6" |
              "stm32f767nih7" |
              "stm32f767vih6" |
              "stm32f767vih7" |
              "stm32f767vit6" |
              "stm32f767vit7" |
              "stm32f767zit6" |
              "stm32f768aiy6" |
              "stm32f769aiy6" |
              "stm32f769bit6" |
              "stm32f769iit6" |
              "stm32f769nih6" |
              "stm32f777bit6" |
              "stm32f777iik6" |
              "stm32f777iik7" |
              "stm32f777iit6" |
              "stm32f777iit7" |
              "stm32f777nih6" |
              "stm32f777nih7" |
              "stm32f777vih6" |
              "stm32f777vih7" |
              "stm32f777vit6" |
              "stm32f777vit7" |
              "stm32f777zit6" |
              "stm32f778aiy6" |
              "stm32f779aiy6" |
              "stm32f779bit6" |
              "stm32f779iit6" |
              "stm32f779nih6" =>
            Mem_List := Mem_List & ("flash");
            for Mem_Kind ("flash") use "ROM";
            for Address  ("flash") use "0x200000";
            for Size     ("flash") use "2097152";
         when others => null;
      end case;
      for Memories use Mem_List;
      for Boot_Memory use stm32f7_65_67_68_69_77_78_79_dc_Config.Boot_Memory;
      for Main_Stack_Size use stm32f7_65_67_68_69_77_78_79_dc_Config.Stack_Size;

   end Device_Configuration;
end stm32f7_65_67_68_69_77_78_79_dc;
